function LOAD_SQUIGGLE_SET(){
    // squiggle set:
    tiles.push( new Tile(0, ['AAA', 'AAA', 'AAA', 'AAA']) );
    tiles.push( new Tile(1, ['ABA', 'AAA', 'AAA', 'ABA']) );
    tiles.push( new Tile(2, ['ABA', 'ABA', 'ABA', 'ABA']) );
    tiles.push( new Tile(3, ['AAB', 'BAA', 'AAB', 'BAA']) );
    tiles.push( new Tile(4, ['BAC', 'CAB', 'BAC', 'CAB']) );
    tiles.push( new Tile(5, ['BAC', 'CAB', 'BAC', 'CAB']) );
    tiles.push( new Tile(6, ['BAC', 'CAC', 'CAB', 'BAB']) );
    tiles.push( new Tile(7, ['BAA', 'AAA', 'AAB', 'BAB']) );
    tiles.push( new Tile(8, ['CAA', 'AAA', 'AAC', 'CAC']) );
    tiles.push( new Tile(9, ['ABA', 'AAA', 'AAB', 'BAA']) );
    tiles.push( new Tile(10, ['ABA', 'AAC', 'CAB', 'BAA']) );
    tiles.push( new Tile(11, ['ABA', 'ABA', 'AAA', 'ABA']) );
    tiles.push( new Tile(12, ['ABA', 'ABB', 'BAB', 'BBA']) );
    tiles.push( new Tile(13, ['BBB', 'BBB', 'BBB', 'BBB']) );
    tiles.push( new Tile(14, ['ABA', 'AAB', 'BAB', 'BAA']) );
    tiles.push( new Tile(15, ['BAA', 'AAA', 'AAA', 'AAB']) );
    tiles.push( new Tile(16, ['BAA', 'AAB', 'BAA', 'AAB']) );
    tiles.push( new Tile(17, ['BAA', 'AAB', 'BAB', 'BAB']) );
    tiles.push( new Tile(18, ['BAB', 'BAB', 'BAB', 'BAB']) );
    tiles.push( new Tile(19, ['BAB', 'BAB', 'BAB', 'BAB']) );
    tiles.push( new Tile(20, ['ABA', 'AAA', 'AAB', 'BBA']) );
    tiles.push( new Tile(21, ['BBA', 'AAA', 'ABB', 'BBB']) );
    tiles.push( new Tile(22, ['BBA', 'AAA', 'ABB', 'BBB']) );
    tiles.push( new Tile(23, ['BBA', 'AAA', 'AAA', 'ABB']) );
    tiles.push( new Tile(24, ['ABA', 'AAA', 'AAA', 'ABA']) );
    // tiles.push( new Tile(25, ['BBA', 'AAA', 'AAA', 'AAA']) );
    tiles.push( new Tile(26, ['ABA', 'ABA', 'ABA', 'ABA']) );
    tiles.push( new Tile(27, ['ABA', 'ACA', 'ABA', 'ACA']) );
    tiles.push( new Tile(28, ['ACA', 'ACA', 'ACA', 'ACA']) );
    tiles.push( new Tile(29, ['ACA', 'ABA', 'ACA', 'ABA']) );
    tiles.push( new Tile(30, ['ACA', 'AAA', 'ACA', 'AAA']) );
    tiles.push( new Tile(31, ['ABA', 'AAA', 'ABA', 'AAA']) );
    tiles.push( new Tile(32, ['AAC', 'AAA', 'AAC', 'AAA']) );
    tiles.push( new Tile(33, ['CAC', 'CAC', 'CAC', 'CAC']) );
    tiles.push( new Tile(34, ['ACA', 'ACA', 'ACA', 'ACA']) );
    tiles.push( new Tile(35, ['ACA', 'AAA', 'AAA', 'ACA']) );
    tiles.push( new Tile(36, ['ACA', 'ACA', 'ACA', 'ACA']) );
    tiles.push( new Tile(37, ['ABA', 'ABA', 'ABA', 'ABA']) );
    tiles.push( new Tile(38, ['BAB', 'BAB', 'BAB', 'BAB']) );
    tiles.push( new Tile(39, ['CAC', 'CAC', 'CAC', 'CAC']) );
    tiles.push( new Tile(40, ['ABA', 'AAB', 'BBB', 'BAA']) );
    tiles.push( new Tile(41, ['ABA', 'AAA', 'BCB', 'AAA']) );
    tiles.push( new Tile(42, ['ACA', 'AAA', 'CBC', 'AAA']) );
    tiles.push( new Tile(43, ['ACA', 'AAA', 'CCC', 'AAA']) );
    tiles.push( new Tile(44, ['CCC', 'AAA', 'CCC', 'AAA']) );
    tiles.push( new Tile(45, ['BBB', 'AAA', 'BBB', 'AAA']) );
    tiles.push( new Tile(46, ['BAA', 'AAA', 'AAB', 'AAA']) );
    tiles.push( new Tile(47, ['BAB', 'AAA', 'BAB', 'AAA']) );
    tiles.push( new Tile(48, ['AAA', 'BAA', 'AAA', 'AAB']) );
    tiles.push( new Tile(49, ['AAA', 'BAA', 'AAA', 'AAB']) );
    tiles.push( new Tile(50, ['ABA', 'AAA', 'ABA', 'AAA']) );
    tiles.push( new Tile(51, ['ABA', 'AAA', 'ABA', 'AAA']) );
    tiles.push( new Tile(52, ['ABA', 'AAA', 'ABA', 'AAA']) );
    tiles.push( new Tile(53, ['CCC', 'ABA', 'CCC', 'ABA']) );
    tiles.push( new Tile(54, ['CCC', 'ABA', 'CCC', 'ABA']) );
    tiles.push( new Tile(55, ['CCC', 'CCC', 'AAA', 'AAA']) );
    tiles.push( new Tile(56, ['CCC', 'CAC', 'CCA', 'AAA']) );
    tiles.push( new Tile(57, ['AAC', 'CAA', 'AAA', 'AAA']) );
    tiles.push( new Tile(58, ['CAC', 'CAA', 'AAA', 'AAA']) );
    tiles.push( new Tile(59, ['AAA', 'CCC', 'AAA', 'ABA']) );
    tiles.push( new Tile(60, ['AAA', 'CAC', 'AAA', 'ABA']) );
    tiles.push( new Tile(61, ['CCC', 'AAA', 'CAC', 'AAA']) );
    tiles.push( new Tile(62, ['CCC', 'AAA', 'CAC', 'AAA']) );
}